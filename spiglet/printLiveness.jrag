import java.util.Set;

aspect LivenessPrinter {
    
    public String Program.printLiveness() {
        StringBuilder builder = new StringBuilder();
        
        builder.append("MAIN");
        builder.append("\n");
        appendLiveness(getStmtsList(), builder);
        
        for(Procedure procedure:getProcsList()) {
            builder.append(procedure.getLabel().getLabel());
            builder.append("\n");
            appendLiveness(procedure.getStmtsRet().getStmtsList(), builder);
        }
        
        return builder.toString();
    }
    
    private void Program.appendLiveness(List<LabeledStmt> labeledStmts, StringBuilder builder) {
        for(LabeledStmt labeledStmt : labeledStmts) {
            // statement name
            builder.append(labeledStmt.pos() + ": ");
            builder.append(labeledStmt.getStmt().getClass().getSimpleName());
            builder.append('\n');
            
            // def
            Set<Temp> defs = labeledStmt.def();
            if(defs.size() != 0) {
                builder.append("\tdef: ");
                for(Temp temp: defs) {
                    builder.append("TEMP " + temp.getNumber());
                    builder.append(' ');
                }
                builder.append('\n');
            }
            
            // use
            Set<Temp> uses = labeledStmt.use();
            if(uses.size() != 0) {
                builder.append("\tuse: ");
                for(Temp temp: uses) {
                    builder.append("TEMP " + temp.getNumber());
                    builder.append(' ');
                }
                builder.append('\n');
            }
            
            // edges
            Set<Integer> edges = labeledStmt.flow();
            if(edges.size() != 0) {
                builder.append("\tedges: ");
                for(Integer edge: edges) {
                    builder.append(edge);
                    builder.append(' ');
                }
                builder.append('\n');
            }
        }
        builder.append('\n');
    }
}
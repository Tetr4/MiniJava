Program   ::= Main:MainClass Classes:ClassDecl*;
MainClass ::= <Name:String> <Arg:String> Vars:VarDecl* Statements:Statement*;
ClassDecl ::= <Name:String> <SuperClass:String> MemberVariables:VarDecl* Methods:Method*;
VarDecl   ::= Type:Type <Name:String>;
Method    ::= ReturnType:Type <Name:String> Params:Parameter* Variables:VarDecl* Statements:Statement* ReturnExpression:Expression;
Parameter ::= Type:Type <Name:String>;
Type      ::= <Name:String>;

abstract Statement;
Block:Statement ::= Statements:Statement*;
IfElse:Statement ::= Condition:Expression TrueBranch:Statement FalseBranch:Statement;
WhileLoop:Statement ::= Condition:Expression Body:Statement;
PrintLine:Statement ::= Expr:Expression;
Assignment:Statement ::= <Variable:String> Value:Expression;
ArrayAssignment:Statement ::= <Variable:String> Index:Expression Value:Expression;

abstract Operator;
And:Operator;
Plus:Operator;
Minus:Operator;
Times:Operator;
LessThan:Operator;

abstract Expression;
BinaryExpression:Expression ::= Op:Operator Left:Expression Right:Expression;
ArrayAccess:Expression ::= Var:Expression Index:Expression;
LengthAccess:Expression ::= Var:Expression;
Call:Expression ::= Var:Expression <MethodName:String> Arguments:Expression*;
IntArrayInstantiation:Expression ::= Size:Expression;
Instantiation:Expression ::= <ClassName:String>;
Negation:Expression ::= Expr:Expression;
BracedExpression:Expression ::= Expr:Expression;
This:Expression;
True:Expression;
False:Expression;
ConstInt:Expression ::= <Value:Integer>;
Identifier:Expression ::=<Name:String>;
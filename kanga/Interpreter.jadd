//import pigletinterpreter.PigletParser;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.PrintStream;
import java.io.InputStream;
import java.util.Hashtable;

import kangainterpreter.util.KangaRuntime;
import kangainterpreter.visitor.MyTreeDumper;
import kangainterpreter.visitor.SetLabel;

aspect KangaInterpreter {
    public static kangainterpreter.KangaParser Program.interpreterParser;
    
    public String Program.interpret() {
        String code = print().getString();
        
        kangainterpreter.syntaxtree.Node root;
        try {
	        // parse
	        InputStream kangaInput = new ByteArrayInputStream(code.getBytes());
	        if (interpreterParser == null) {
	            interpreterParser = new kangainterpreter.KangaParser(kangaInput);
	        } else {
	            kangainterpreter.KangaParser.ReInit(kangaInput);
	        }
	        root = kangainterpreter.KangaParser.Goal();
	    }
	    catch (kangainterpreter.ParseException e) {
	       return e.getMessage();
	    }

        // get line numbers
        Hashtable<kangainterpreter.syntaxtree.Stmt, String> stmtInfo = new Hashtable<kangainterpreter.syntaxtree.Stmt, String>();
        MyTreeDumper treedumper = new MyTreeDumper(stmtInfo);
        root.accept(treedumper);

        // interpret and put result into stream
        ByteArrayOutputStream outStream = new ByteArrayOutputStream();
        PrintStream printStream = new PrintStream(outStream);
        
        PrintStream oldErrorStream = System.err;
        System.setErr(printStream);
        
        KangaRuntime runtime = new KangaRuntime(stmtInfo, printStream, printStream);
        root.accept(new SetLabel(runtime));
        runtime.run();

        System.setErr(oldErrorStream);

        return outStream.toString();
    }
    
}